---
import { Image } from 'astro:assets'
import './stack.css'

export type Item = {
  type: 'image'
  src: ImageMetadata
  alt: string
}

export interface Props {
  type: 'circle' | 'wave'
  items: Item[]
}

const { type, items } = Astro.props
---

<div
  class="relative mx-auto px-8 md:mx-0 md:w-96 md:px-0"
  style="--space: 2em;"
>
  <div class={`stack ${type}`} style={`--total-items: ${items.length}`}>
    {
      items.map((item, index) => (
        <div
          class="stack-item"
          data-index={index}
          style={`--stack-i: ${index}`}
        >
          {item.type === 'image' && (
            <Image
              src={item.src}
              alt={item.alt}
              class="block h-auto w-full cursor-pointer object-contain"
            />
          )}
        </div>
      ))
    }
    <div
      id="indicator"
      class="absolute right-0 -bottom-6 rounded bg-white/50 px-2 font-mono shadow-2xl backdrop-blur-md"
      style={{ zIndex: items.length + 1 }}
    >
    </div>
  </div>
</div>

<script>
  import { Stack } from './stack/index.ts'

  document.addEventListener('DOMContentLoaded', () => {
    const stackElement = document.querySelector('.stack') as HTMLElement
    if (stackElement) {
      new Stack(stackElement)
    }
  })
</script>
