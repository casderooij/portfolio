---
import { Image } from 'astro:assets'
import Video from '../Video.astro'
import './stack.css'

type ImageItem = {
  type: 'image'
  src: ImageMetadata
  alt: string
}

type VideoItem = {
  type: 'video'
  src: string
  orientation: 'landscape' | 'portrait'
}

export type Item = ImageItem | VideoItem

export interface Props {
  type: 'circle' | 'wave'
  items: Item[]
}

const { type, items } = Astro.props
---

<div
  class={`stack ${type} relative py-8`}
  style={`
    --total-items: ${items.length};
    --space: ${items.length > 2 ? '2rem' : '1rem'};
    --offset: ${items.length > 2 ? '-80deg' : '-10deg'};
  `}
  tabindex="0"
>
  {
    items.map((item, index) => (
      <div
        class="stack-item cursor-pointer"
        data-index={index}
        style={`--stack-i: ${index}`}
      >
        {item.type === 'image' && <Image src={item.src} alt={item.alt} />}
        {item.type === 'video' && (
          <div
            style={`width: ${item.orientation === 'portrait' ? '75%' : '100%'}`}
          >
            <Video src={item.src} />
          </div>
        )}
      </div>
    ))
  }
  <div
    id="indicator"
    class="text-text-primary absolute right-0 bottom-2 rounded bg-white px-2 font-mono shadow-2xl"
    style={{ zIndex: items.length + 1 }}
  >
  </div>
</div>

<script>
  import { Stack } from './index.ts'

  document.addEventListener('DOMContentLoaded', () => {
    const stackElements = document.querySelectorAll(
      '.stack',
    ) as NodeListOf<HTMLElement>
    stackElements.forEach((stackElement) => {
      if (stackElement) {
        new Stack(stackElement)
      }
    })
  })
</script>
