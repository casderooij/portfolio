---
interface Props {
  src: string
}

const { src } = Astro.props
---

<video muted playsinline loop preload="none" data-src={src}></video>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const videos = document.querySelectorAll('video[data-src]')

    const observer = new IntersectionObserver(
      (entries) => {
        for (const entry of entries) {
          const video = entry.target as HTMLVideoElement
          if (entry.isIntersecting) {
            video.play()
          } else {
            video.pause()
          }
        }
      },
      { threshold: 0.5 },
    )

    const lazyObserver = new IntersectionObserver((entries, self) => {
      for (const entry of entries) {
        if (entry.isIntersecting) {
          const video = entry.target as HTMLVideoElement
          video.src = video.dataset.src!
          video.load()
          observer.observe(video)
          self.unobserve(video)
        }
      }
    })

    for (const video of videos) {
      lazyObserver.observe(video)
    }
  })
</script>
